# k8s/06-main-service.yaml
# Main Django Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: main-service
  namespace: fibonacci
  labels:
    app: main-service
    tier: backend
spec:
  replicas: 2  # Multiple replicas for scalability
  selector:
    matchLabels:
      app: main-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: main-service
        tier: backend
        version: v1
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
      - name: main
        image: fibonacci-main-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fibonacci-secret
              key: DB_PASSWORD
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: DB_PORT
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fibonacci-secret
              key: SECRET_KEY
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: DEBUG
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: ALLOWED_HOSTS
        - name: ANALYTICS_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: ANALYTICS_SERVICE_URL
        - name: PORTFOLIO_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: PORTFOLIO_SERVICE_URL
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: fibonacci-config
              key: CORS_ORIGINS
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/ready/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: main-service
  namespace: fibonacci
  labels:
    app: main-service
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: main-service
